listen 80;
set $template_root /var/ipax/templates;

location / {
	root /var/ipax/html/;
	add_header Cache-Control no-store;
	add_header Pragma no-cache;
}
location /landing {
	add_header Cache-Control no-store;
	add_header Pragma no-cache;
	default_type text/html;
	content_by_lua_block {
		local data = { app_name = ngx.var.demoapp_alias }
		require("resty.template").render_file("landing.html", data)
	}
}
location /private {
	add_header Cache-Control no-store;
	add_header Pragma no-cache;
	access_by_lua_block {
		local oidc_opts = {
			discovery = ngx.var.oidc_discovery,
			client_id = ngx.var.client_id,
			client_secret = ngx.var.client_secret,
			scope = ngx.var.scope
		}
		local res = require("multiapps").get_res(oidc_opts, ngx.var.demoapp_base_url);
	}
}
location /private/info {
	add_header Cache-Control no-store;
	add_header Pragma no-cache;
	default_type text/html;
	content_by_lua_block {
		local multiapps = require("multiapps")
		local oidc_opts = {
			discovery = ngx.var.oidc_discovery,
			client_id = ngx.var.client_id,
			client_secret = ngx.var.client_secret,
			scope = ngx.var.scope
		}
		local res = multiapps.get_res(oidc_opts, ngx.var.demoapp_base_url);
		local data = {
			access_token = multiapps.get_access_token(res),
			app_name = ngx.var.demoapp_alias,
			headers = ngx.resp.get_headers(),
			id_token = multiapps.get_id_token(res),
			logout_uri = os.getenv("OIDC_LOGOUT_URI"),
			user = res.user,
			user_actions = {},
			userinfo_json = multiapps.get_userinfo_json(res),
			username = multiapps.get_preferred_username_from_userinfo_or_idtoken(res)
		}
		require("resty.template").render_file("info.html", data)
	}
}
